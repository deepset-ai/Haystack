name: License Compliance Test

on:
  push:
    branches:
      - massi/license-checker


jobs:
  license_check_vanilla:
    env:
      REQUIREMENTS_FILE: requirements_vanilla.txt

    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Get explicit and transitive dependencies
      run: |
        pip install .
        pip freeze > ${{ env.REQUIREMENTS_FILE }}

    - name: Check Licenses
      id: license_check_report
      uses: pilosus/action-pip-license-checker@v2
      with:
        github-token: ${{ secrets.GH_ACCESS_TOKEN }}
        requirements: ${{ env.REQUIREMENTS_FILE }}
        fail: 'Copyleft,Other,Error'
        # Exclusions in the vanilla distribution must be explicitly motivated
        #
        # - certifi is pulled in by requests
        # - num2words is pulled in by quantulum3
        # - tqdm is MLP but there are no better alternatives
        # - nvidia libraries are brought in by torch on Linux,
        #   FIXME: to be removed once we stop depending on torch with the vanilla install
        exclude: '(?i)^(certifi|num2words|tqdm|nvidia-).*'

    - name: Print report
      if: ${{ always() }}
      run: echo "${{ steps.license_check_report.outputs.report }}"

  license_check_all:
    env:
      REQUIREMENTS_FILE: requirements_all.txt

    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Get explicit and transitive dependencies
      run: |
        pip install -U pip
        pip install .[all]
        pip freeze > ${{ env.REQUIREMENTS_FILE }}

    - name: Check Licenses
      id: license_check_report
      uses: pilosus/action-pip-license-checker@v2
      with:
        github-token: ${{ secrets.GH_ACCESS_TOKEN }}
        requirements: ${{ env.REQUIREMENTS_FILE }}
        fail: 'Copyleft,Other,Error'
        # We allow incompatible licenses when they come from optional dependencies.
        #
        # Special cases:
        # - pyzmq is flagged because dual-licensed, but we assume using BSD
        # - tqdm is MLP but there are no better alternatives
        exclude: '(?i)^(astroid|certifi|chardet|num2words|nvidia-|pathspec|pinecone-client|psycopg2|pylint|PyMuPDF|pyzmq|tqdm).*'

    - name: Print report
      if: ${{ always() }}
      run: echo "${{ steps.license_check_report.outputs.report }}"
