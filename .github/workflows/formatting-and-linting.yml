name: Check formatting and static linting

on:
  pull_request:
    paths:
      - "**.py"
      - "**/pyproject.toml"

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: ./.github/actions/python_cache/

      - name: Install Haystack
        run: |
          pip install --upgrade pip
          pip install .[dev]

      - name: Check status
        run: |
          if ! black . --check; then
            git status
            echo "###################################################################################################"
            echo "# "
            echo "# CHECK FAILED! Black found issues with your code formatting."
            echo "# "
            echo "# Either:"
            echo "# 1. Run Black locally before committing:"
            echo "# "
            echo "#     pip install black==22.6.0"
            echo "#     black ."
            echo "# "
            echo "# 2. Install the pre-commit hook:"
            echo "# "
            echo "#     pre-commit install --hook-type pre-push"
            echo "# "
            echo "# 3. See https://github.com/deepset-ai/haystack/blob/main/CONTRIBUTING.md for help."
            echo "# "
            echo "# If you have further problems, please open an issue: https://github.com/deepset-ai/haystack/issues"
            echo "# "
            echo "##################################################################################################"
            exit 1
          fi

  mypy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get changed files
        id: files
        uses: tj-actions/changed-files@v34
        with:
          files: |
            **/*.py
          files_ignore: |
            test/**
            rest_api/test/**

      - name: Setup Python
        uses: ./.github/actions/python_cache/

      - name: Mypy
        if: steps.files.outputs.any_changed == 'true'
        run: |
          mkdir .mypy_cache/
          mypy --install-types --non-interactive ${{ steps.files.outputs.all_changed_files }} --exclude=rest_api/build/ --exclude=rest_api/test/

  pylint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: ./.github/actions/python_cache/

      - name: Pylint
        run: |
          pylint -ry -j 0 haystack/ rest_api/rest_api
